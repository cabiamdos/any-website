/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var j=Object.create;var g=Object.defineProperty;var K=Object.getOwnPropertyDescriptor;var Y=Object.getOwnPropertyNames;var $=Object.getPrototypeOf,x=Object.prototype.hasOwnProperty;var v=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports);var D=(e,t,r,c)=>{if(t&&typeof t=="object"||typeof t=="function")for(let o of Y(t))!x.call(e,o)&&o!==r&&g(e,o,{get:()=>t[o],enumerable:!(c=K(t,o))||c.enumerable});return e};var R=(e,t,r)=>(r=e!=null?j($(e)):{},D(t||!e||!e.__esModule?g(r,"default",{value:e,enumerable:!0}):r,e)),C=e=>D(g({},"__esModule",{value:!0}),e);var O=v((re,F)=>{F.exports={name:"dotenv",version:"16.4.5",description:"Loads environment variables from .env file",main:"lib/main.js",types:"lib/main.d.ts",exports:{".":{types:"./lib/main.d.ts",require:"./lib/main.js",default:"./lib/main.js"},"./config":"./config.js","./config.js":"./config.js","./lib/env-options":"./lib/env-options.js","./lib/env-options.js":"./lib/env-options.js","./lib/cli-options":"./lib/cli-options.js","./lib/cli-options.js":"./lib/cli-options.js","./package.json":"./package.json"},scripts:{"dts-check":"tsc --project tests/types/tsconfig.json",lint:"standard","lint-readme":"standard-markdown",pretest:"npm run lint && npm run dts-check",test:"tap tests/*.js --100 -Rspec","test:coverage":"tap --coverage-report=lcov",prerelease:"npm test",release:"standard-version"},repository:{type:"git",url:"git://github.com/motdotla/dotenv.git"},funding:"https://dotenvx.com",keywords:["dotenv","env",".env","environment","variables","config","settings"],readmeFilename:"README.md",license:"BSD-2-Clause",devDependencies:{"@definitelytyped/dtslint":"^0.0.133","@types/node":"^18.11.3",decache:"^4.6.1",sinon:"^14.0.1",standard:"^17.0.0","standard-markdown":"^7.1.0","standard-version":"^9.5.0",tap:"^16.3.0",tar:"^6.1.11",typescript:"^4.8.4"},engines:{node:">=12"},browser:{fs:!1}}});var T=v((ne,u)=>{var _=require("fs"),N=require("path"),L=require("os"),G=require("crypto"),U=O(),h=U.version,P=/(?:^|^)\s*(?:export\s+)?([\w.-]+)(?:\s*=\s*?|:\s+?)(\s*'(?:\\'|[^'])*'|\s*"(?:\\"|[^"])*"|\s*`(?:\\`|[^`])*`|[^#\r\n]+)?\s*(?:#.*)?(?:$|$)/mg;function B(e){let t={},r=e.toString();r=r.replace(/\r\n?/mg,`
`);let c;for(;(c=P.exec(r))!=null;){let o=c[1],n=c[2]||"";n=n.trim();let s=n[0];n=n.replace(/^(['"`])([\s\S]*)\1$/mg,"$2"),s==='"'&&(n=n.replace(/\\n/g,`
`),n=n.replace(/\\r/g,"\r")),t[o]=n}return t}function S(e){let t=V(e),r=i.configDotenv({path:t});if(!r.parsed){let s=new Error(`MISSING_DATA: Cannot parse ${t} for an unknown reason`);throw s.code="MISSING_DATA",s}let c=y(e).split(","),o=c.length,n;for(let s=0;s<o;s++)try{let a=c[s].trim(),l=W(r,a);n=i.decrypt(l.ciphertext,l.key);break}catch(a){if(s+1>=o)throw a}return i.parse(n)}function M(e){console.log(`[dotenv@${h}][INFO] ${e}`)}function q(e){console.log(`[dotenv@${h}][WARN] ${e}`)}function E(e){console.log(`[dotenv@${h}][DEBUG] ${e}`)}function y(e){return e&&e.DOTENV_KEY&&e.DOTENV_KEY.length>0?e.DOTENV_KEY:process.env.DOTENV_KEY&&process.env.DOTENV_KEY.length>0?process.env.DOTENV_KEY:""}function W(e,t){let r;try{r=new URL(t)}catch(a){if(a.code==="ERR_INVALID_URL"){let l=new Error("INVALID_DOTENV_KEY: Wrong format. Must be in valid uri format like dotenv://:key_1234@dotenvx.com/vault/.env.vault?environment=development");throw l.code="INVALID_DOTENV_KEY",l}throw a}let c=r.password;if(!c){let a=new Error("INVALID_DOTENV_KEY: Missing key part");throw a.code="INVALID_DOTENV_KEY",a}let o=r.searchParams.get("environment");if(!o){let a=new Error("INVALID_DOTENV_KEY: Missing environment part");throw a.code="INVALID_DOTENV_KEY",a}let n=`DOTENV_VAULT_${o.toUpperCase()}`,s=e.parsed[n];if(!s){let a=new Error(`NOT_FOUND_DOTENV_ENVIRONMENT: Cannot locate environment ${n} in your .env.vault file.`);throw a.code="NOT_FOUND_DOTENV_ENVIRONMENT",a}return{ciphertext:s,key:c}}function V(e){let t=null;if(e&&e.path&&e.path.length>0)if(Array.isArray(e.path))for(let r of e.path)_.existsSync(r)&&(t=r.endsWith(".vault")?r:`${r}.vault`);else t=e.path.endsWith(".vault")?e.path:`${e.path}.vault`;else t=N.resolve(process.cwd(),".env.vault");return _.existsSync(t)?t:null}function m(e){return e[0]==="~"?N.join(L.homedir(),e.slice(1)):e}function H(e){M("Loading env from encrypted .env.vault");let t=i._parseVault(e),r=process.env;return e&&e.processEnv!=null&&(r=e.processEnv),i.populate(r,t,e),{parsed:t}}function J(e){let t=N.resolve(process.cwd(),".env"),r="utf8",c=Boolean(e&&e.debug);e&&e.encoding?r=e.encoding:c&&E("No encoding is specified. UTF-8 is used by default");let o=[t];if(e&&e.path)if(!Array.isArray(e.path))o=[m(e.path)];else{o=[];for(let l of e.path)o.push(m(l))}let n,s={};for(let l of o)try{let d=i.parse(_.readFileSync(l,{encoding:r}));i.populate(s,d,e)}catch(d){c&&E(`Failed to load ${l} ${d.message}`),n=d}let a=process.env;return e&&e.processEnv!=null&&(a=e.processEnv),i.populate(a,s,e),n?{parsed:s,error:n}:{parsed:s}}function Q(e){if(y(e).length===0)return i.configDotenv(e);let t=V(e);return t?i._configVault(e):(q(`You set DOTENV_KEY but you are missing a .env.vault file at ${t}. Did you forget to build it?`),i.configDotenv(e))}function z(e,t){let r=Buffer.from(t.slice(-64),"hex"),c=Buffer.from(e,"base64"),o=c.subarray(0,12),n=c.subarray(-16);c=c.subarray(12,-16);try{let s=G.createDecipheriv("aes-256-gcm",r,o);return s.setAuthTag(n),`${s.update(c)}${s.final()}`}catch(s){let a=s instanceof RangeError,l=s.message==="Invalid key length",d=s.message==="Unsupported state or unable to authenticate data";if(a||l){let f=new Error("INVALID_DOTENV_KEY: It must be 64 characters long (or more)");throw f.code="INVALID_DOTENV_KEY",f}else if(d){let f=new Error("DECRYPTION_FAILED: Please check your DOTENV_KEY");throw f.code="DECRYPTION_FAILED",f}else throw s}}function X(e,t,r={}){let c=Boolean(r&&r.debug),o=Boolean(r&&r.override);if(typeof t!="object"){let n=new Error("OBJECT_REQUIRED: Please check the processEnv argument being passed to populate");throw n.code="OBJECT_REQUIRED",n}for(let n of Object.keys(t))Object.prototype.hasOwnProperty.call(e,n)?(o===!0&&(e[n]=t[n]),c&&E(o===!0?`"${n}" is already defined and WAS overwritten`:`"${n}" is already defined and was NOT overwritten`)):e[n]=t[n]}var i={configDotenv:J,_configVault:H,_parseVault:S,config:Q,decrypt:z,parse:B,populate:X};u.exports.configDotenv=i.configDotenv;u.exports._configVault=i._configVault;u.exports._parseVault=i._parseVault;u.exports.config=i.config;u.exports.decrypt=i.decrypt;u.exports.parse=i.parse;u.exports.populate=i.populate;u.exports=i});var b=v((oe,I)=>{var p={};process.env.DOTENV_CONFIG_ENCODING!=null&&(p.encoding=process.env.DOTENV_CONFIG_ENCODING);process.env.DOTENV_CONFIG_PATH!=null&&(p.path=process.env.DOTENV_CONFIG_PATH);process.env.DOTENV_CONFIG_DEBUG!=null&&(p.debug=process.env.DOTENV_CONFIG_DEBUG);process.env.DOTENV_CONFIG_OVERRIDE!=null&&(p.override=process.env.DOTENV_CONFIG_OVERRIDE);process.env.DOTENV_CONFIG_DOTENV_KEY!=null&&(p.DOTENV_KEY=process.env.DOTENV_CONFIG_DOTENV_KEY);I.exports=p});var A=v((se,w)=>{var Z=/^dotenv_config_(encoding|path|debug|override|DOTENV_KEY)=(.+)$/;w.exports=function(t){return t.reduce(function(r,c){let o=c.match(Z);return o&&(r[o[1]]=o[2]),r},{})}});var ee={};module.exports=C(ee);(function(){T().config(Object.assign({},b(),A()(process.argv)))})();var k=R(require("fs"));k.readdir("./dist","utf-8",(e,t)=>{console.log("files",t)});
